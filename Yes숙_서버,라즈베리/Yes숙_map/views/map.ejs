<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <title>지도 생성하기</title>
    <link rel="stylesheet" type="text/css" href="stylesheets/style.css">
</head>

<body>
    <!-- 지도를 표시할 div 입니다 -->
    <script src="http://code.jquery.com/jquery-1.12.1.js"></script>
    <script type="text/javascript"
        src="//dapi.kakao.com/v2/maps/sdk.js?appkey=49725e839bdaad67111ffa0ee285562a"></script>

    <div class="map_wrap">
        <div id="map" style="width:100%;height:100%;position:relative;overflow:hidden;"></div>
        <ul id="category">
            <li id="F" data-order="0">
                <span class="category_bg bank"></span>
                무료급식
            </li>
            <li id="T" data-order="1">
                <span class="category_bg mart"></span>
                상담시설
            </li>
            <li id="M" data-order="2">
                <span class="category_bg pharmacy"></span>
                의료시설
            </li>
            <li id="P" data-order="3">
                <span class="category_bg oil"></span>
                보호시설
            </li>
            <li id="W" data-order="4">
                <span class="category_bg store"></span>
                구인구직
            </li>
        </ul>
    </div>

    <script>
        var placeOverlay = new kakao.maps.CustomOverlay({ zIndex: 1 }),
            contentNode = document.createElement('div'),
            currCategory = '',
            markers = []

        var mapContainer = document.getElementById('map'), // 지도를 표시할 div 
            mapOption = {
                center: new kakao.maps.LatLng(37.456054, 126.705699), // 지도의 중심좌표
                level: 7 // 지도의 확대 레벨
            };
        // 지도를 표시할 div와  지도 옵션으로  지도를 생성합니다
        var map = new kakao.maps.Map(mapContainer, mapOption);
        contentNode.className = 'placeinfo_wrap'

        placeOverlay.setContent(contentNode)
        addCategoryClickEvent()

        function addCategoryClickEvent() {
            var category = document.getElementById('category'),
                children = category.children;

            for (var i = 0; i < children.length; i++) {
                children[i].onclick = onClickCategory;
            }
        }

        // 카테고리를 클릭했을 때 호출되는 함수입니다
        function onClickCategory() {
            var id = this.id,
                className = this.className;
            placeOverlay.setMap(null);
            //alert('id : ' + id + '// ' + 'className : ' + className + '//')

            if (className === 'on') {   //카테고리의 하나가 클릭되어있는경우 overlay와 marker를 map에서 제거
                currCategory = '';
                changeCategoryClass();
                removeMarker();
            } else {
                currCategory = id;
                changeCategoryClass(this);
                searchPlaces();
            }
        }

        // 클릭된 카테고리에만 클릭된 스타일을 적용하는 함수입니다
        function changeCategoryClass(el) {
            var category = document.getElementById('category'),
                children = category.children,
                i;

            for (i = 0; i < children.length; i++) {
                children[i].className = '';
            }

            if (el) {
                el.className = 'on';
            }
        }
        function searchPlaces() {
            if (!currCategory) {
                return
            }
            removeMarker()
            var order = document.getElementById(currCategory).getAttribute('data-order')
            var obj = new Object()
            obj.order = order
            var jsonData = JSON.stringify(obj)
            $.ajax({
                type: "post",
                dataType: "json",
                url: '/data.json',
                data: {
                    orderData: jsonData
                },
                success: function (data) {
                    displayPlaces(data)
                }
            })
        }
        function displayPlaces(positions) {
            positions.forEach(function (pos) {
                var marker = addMarker(new kakao.maps.LatLng(pos.latlng[0], pos.latlng[1]));

                (function (marker, pos) {    //즉시실행함수
                    kakao.maps.event.addListener(marker, 'click', function () {
                        displayPlaceInfo(pos);
                    });
                })(marker, pos);    //function(1,2)
            })
        }
        function addMarker(position) {
            marker = new kakao.maps.Marker({
                position: position, // 마커의 위치
            });
            marker.setMap(map)
            markers.push(marker)

            return marker
        }
        function removeMarker() {
            for (var i = 0; i < markers.length; i++) {
                markers[i].setMap(null);
            }
            return
        }
        function displayPlaceInfo(place) {
            alert(place.latlng[0])
            var content = '<div class="placeinfo">' +
                '   <a class="title" target="_blank" title="' + place.title + '">' + place.title + '</a>' +
                '<div class="close" onclick="closeOverlay()" title="닫기"></div>';

            if (place.ellipsis) {
                content += '    <span title="' + place.ellipsis + '">' + place.ellipsis + '</span>' +
                    '  <span class="jibun" title="' + place.jibun + '">(지번 : ' + place.jibun + ')</span>';
            } else {
                content += '    <span title="' + place.jibun + '">' + place.jibun + '</span>';
            }

            content += '</div>' +
                '<div class="after"></div>';

            var closeBtn = document.createElement('div')
            closeBtn.classNmae = 'close'
            contentNode.innerHTML = content
            placeOverlay.setPosition(new kakao.maps.LatLng(place.latlng[0], place.latlng[1]))
            placeOverlay.setMap(map)
        }
        function closeOverlay() {
            placeOverlay.setMap(null)
        }
        /*function displayMarker(positions) {
            positions.forEach(function (pos) {
                var closeFun = function closeOverlay() {
                    placeOverlay.setMap(null)
                }

                var marker = new.kakao.maps.Marker({
                    map: map,
                    title: pos.title,
                    position: new kakao.maps.LatLng(pos.latlng[0], pos.latlng[1])
                })
                kakao.maps.event.addListener(marker, 'click', function () {
                    placeOverlay.setMap(map)
                })
                //placeOverlay.position = marker.getPosition()
                //displayOverlay(pos)
            })
        }*/
        /*function displayOverlay(pos) {
            var content = '<div class="placeinfo">' +
                '   <a class="title" target="_blank" title="' + pos.title + '">' + pos.title + '</a>';

            if (pos.ellipsis) {
                content += '    <span title="' + pos.ellipsis + '">' + pos.ellipsis + '</span>' +
                    '  <span class="jibun" title="' + pos.jibun + '">(지번 : ' + pos.ellipsis + ')</span>';
            } else {
                content += '    <span title="' + pos.jibun + '">' + pos.jibun + '</span>';
            }

            content += '</div>' +
                '<div class="after"></div>';

            contentNode.innerHTML = content
            placeOverlay.setPosition(marker.getPosition())
            placeOverlay.setMap(map)
            return
        }*/

        /*$(document).ready(function () {
            $.ajax({
                url: '/data.json',
                type: 'GET',
                dataType: 'JSON',
                success: function (data) {
                    data.forEach(function (pos) {
                        //alert(pos.ellipsis)
                    })
                    data.forEach(function (pos) {

                        var closeFun = function closeOverlay() {
                            overlay.setMap(null)
                        }

                        var marker = new kakao.maps.Marker({
                            map: map,
                            title: pos.title,
                            position: new kakao.maps.LatLng(pos.latlng[0], pos.latlng[1])
                        })

                        kakao.maps.event.addListener(marker, 'click', function () {
                            overlay.setMap(map);
                            //alert(position[1].latlng)
                        });

                        var overlay = new kakao.maps.CustomOverlay({
                            position: marker.getPosition()
                        })

                        var content = document.createElement('div');
                        content.className = 'wrap'

                        var info = document.createElement('div');
                        info.className = 'info'
                        info.id = 'info';
                        var title = document.createElement('div');
                        title.className = 'title'
                        title.appendChild(document.createTextNode(pos.title));
                        info.appendChild(title)
                        content.appendChild(info);

                        var closeBtn = document.createElement('div');
                        closeBtn.onclick = closeFun;
                        closeBtn.className = 'close';
                        closeBtn.id = 'close';
                        info.appendChild(closeBtn);
                        var body = document.createElement('div')
                        body.className = 'body'
                        info.appendChild(body)
                        var desc = document.createElement('div')
                        desc.className = 'desc'
                        var ellipsis = document.createElement('div')
                        var jibun = document.createElement('div')
                        ellipsis.className = 'ellipsis'
                        jibun.className = 'jibun ellipsis'
                        ellipsis.appendChild(document.createTextNode(pos.ellipsis))
                        jibun.appendChild(document.createTextNode(pos.jibun))
                        info.appendChild(body)
                        info.appendChild(desc)
                        desc.appendChild(ellipsis)
                        desc.appendChild(jibun)



                        overlay.setContent(content)
                    })
                }
            })
        })*/
    </script>
</body>

</html>